use std::{sync::Arc, usize::MAX};

use anyhow::{bail, Error, Result};
use async_trait::async_trait;
use chrono::{DateTime, Local};
use html2text::render::RichDecorator;
use log::{error, info};
use regex::Regex;
use reqwest::Client;
use scraper::{Html, Selector};
use serde::Deserialize;
use tokio::sync::{mpsc, Semaphore};

use crate::execution::ports::news_fetcher::{FetchNewsArticle, FetchNewsHandler, FetchNewsOutput, NewsFetcher};

// Doc: https://news.yahoo.co.jp/rss
#[derive(Deserialize)]
struct NewsResponse {
    channel: NewsResponseChannel,
}

#[derive(Deserialize)]
struct NewsResponseChannel {
    // The `item` tag appears multiple times and is parsed into an array
    #[serde(rename = "item")]
    items: Vec<NewsResponseChannelItem>,
}

#[derive(Deserialize)]
struct NewsResponseChannelItem {
    title: Option<String>,
    link: Option<String>,
    #[serde(rename = "pubDate")]
    pub_date: Option<String>,
    image: Option<String>,
    description: Option<String>,
}

pub(crate) struct YahooClient {
    providers: Vec<String>,
    interval: i64,
}

impl YahooClient {
    pub(crate) fn new(interval: i64) -> Self {
        Self {
            // TODO: Find a better way to retrieve the list of providers
            providers: vec![
                "aab",
                "aba",
                "abema",
                "abn",
                "absakita",
                "aerakidsp",
                "agrinews",
                "akt",
                "alba",
                "allreview",
                "alterna",
                "amami",
                "ampreview",
                "amweb",
                "ananweb",
                "andgp",
                "animage",
                "anmanmv",
                "ann",
                "aptsushinv",
                "artnewsjp",
                "asahiand",
                "asahibc",
                "asahisdgs",
                "asapostv",
                "ascii",
                "asiap",
                "asmasahi",
                "at_s",
                "atcampus",
                "atv",
                "autobild",
                "autoby",
                "autocar",
                "awire",
                "badspi",
                "baila",
                "bark",
                "baseballc",
                "baseballk",
                "baseballo",
                "basket",
                "battlen",
                "bazaar",
                "bballk",
                "bballntfo",
                "bbc",
                "bbcbiwakov",
                "bbmv",
                "bbspirits",
                "bbt",
                "bcn",
                "behindp",
                "benesseks",
                "bengocom",
                "bengojp",
                "bestcar",
                "bezzy",
                "bfj",
                "bikeno",
                "binsider",
                "biteki",
                "biz_coacha",
                "biz_it_mk",
                "biz_it_sj",
                "biz_jinji",
                "biz_lifeh",
                "biz_mos",
                "biz_plus",
                "biz_shoko",
                "bonichi",
                "bookasahi",
                "bookbang",
                "bookplus",
                "bravom",
                "bss",
                "btecho",
                "bunshun",
                "business",
                "cancam",
                "capa",
                "carv",
                "casabrutus",
                "cbc",
                "cbn",
                "cgworld",
                "chanto",
                "chibach",
                "chibatele",
                "chibatopi",
                "choani",
                "chosun",
                "chugoku",
                "chukaiv",
                "chukei",
                "chuokou",
                "chuspo",
                "cine",
                "cinemore",
                "cinranet",
                "cnaakita",
                "cnetj",
                "cnippou",
                "cnn",
                "cocokara",
                "coindesk",
                "colocal",
                "courrier",
                "crankinn",
                "creaweb",
                "crssntv",
                "ctv",
                "ctvg",
                "dancyu",
                "davincin",
                "dazn",
                "deducate",
                "dempad",
                "denfami",
                "devi",
                "dhbrn",
                "diamond",
                "diamondf",
                "digiday",
                "dime",
                "dmore",
                "doshin",
                "dospo",
                "driverweb",
                "dtohoku",
                "dzai",
                "eat",
                "ebc",
                "eclat",
                "edua",
                "egolf",
                "ehime",
                "eiga",
                "eigach",
                "eipub",
                "elevenspo",
                "ellegirl",
                "elleonline",
                "eltha",
                "encount",
                "engine",
                "entame",
                "esse",
                "etalent",
                "evtimes",
                "exp",
                "fanfun",
                "fashions",
                "fashiontn",
                "fballista",
                "fbc",
                "fbox",
                "fbsnews",
                "fchange",
                "fct",
                "ffield",
                "figaro",
                "finders",
                "fineplayv",
                "fitlove",
                "flix",
                "fminpo",
                "fnnprimev",
                "footballc",
                "forbes",
                "forza",
                "friday",
                "fsal",
                "fsight",
                "ftaiwan",
                "ftb",
                "ftv",
                "fujingaho",
                "fujinjp",
                "fujitv",
                "fukui",
                "fukushi",
                "fullcount",
                "futaman",
                "fvision",
                "fyears",
                "gamespav",
                "gbr",
                "gdo",
                "geeksv",
                "gekisaka",
                "gendaibiz",
                "getnavi",
                "getsuriku",
                "getsuv",
                "gifuchan",
                "gifuweb",
                "gingerweb",
                "ginza",
                "gisele",
                "giz",
                "gkakutogi",
                "globeplus",
                "globisv",
                "goal",
                "goethe",
                "golfnettv",
                "golfnw",
                "gonline",
                "gooday",
                "gqjapan",
                "gtv",
                "hab",
                "hakoshin",
                "halmek",
                "hanako",
                "hankyoreh",
                "hathlete",
                "hbcv",
                "hbnippon",
                "hiaichi",
                "hintpot",
                "hnrm",
                "hokkaibun",
                "hokkoku",
                "hokuriku",
                "hometvv",
                "hominis",
                "houdoukv",
                "htbv",
                "htv",
                "huffpost",
                "iat",
                "ibaraki",
                "ibciwatev",
                "ignjapan",
                "imaonline",
                "impahw",
                "impavw",
                "impcaw",
                "impclw",
                "impdcw",
                "impgmw",
                "impgrw",
                "imphbw",
                "impiw",
                "impkdw",
                "impkitw",
                "impktw",
                "imppcw",
                "impress",
                "imptrw",
                "impwfw",
                "inumag",
                "isd",
                "isenp",
                "ishikawa",
                "it_edn",
                "it_eetimes",
                "it_favlog",
                "it_monoist",
                "it_nlab",
                "itv",
                "iwanichi",
                "iwatenpv",
                "izunp",
                "jbpressz",
                "jct",
                "jfactc",
                "jikayosha",
                "jomo",
                "jprime",
                "jrt",
                "jspa",
                "jsportsv",
                "jwave",
                "k_success",
                "kab",
                "kachimai",
                "kaiyou",
                "kana",
                "kanpara",
                "kansensho",
                "kantele",
                "kateigaho",
                "kbcv",
                "kbs",
                "keibalab",
                "keibana",
                "kenkoshin",
                "kenkosoku",
                "kfb",
                "khbv",
                "kinejun",
                "kinyobi",
                "kitanihon",
                "kjn",
                "kkbv",
                "kkrgd",
                "kksoccer",
                "kkt",
                "knb",
                "kosodate",
                "koukousei",
                "kpseven",
                "krjapan",
                "kry",
                "ksbv",
                "kstylens",
                "ktk",
                "ktn",
                "kts",
                "ktvguide",
                "kufura",
                "kumanichi",
                "kunel",
                "kurumans",
                "kushironw",
                "kutv",
                "kyobun",
                "kyodonews",
                "kyoikuict",
                "kyousemi",
                "kyt",
                "kytnews",
                "lasisa",
                "lee",
                "leon",
                "lettucec",
                "linenews",
                "lmaga",
                "locationj",
                "macau",
                "magmix",
                "manetatsun",
                "maquia",
                "marisol",
                "maruspo",
                "matomeshi",
                "mbcnews",
                "mbrasiln",
                "mbsnews",
                "mcyclist",
                "mdpr",
                "medical",
                "medicald",
                "meijinet",
                "mensnonno",
                "mensplus",
                "merkmal",
                "mietvv",
                "mimollet",
                "minami",
                "minatos",
                "minkabu",
                "minkei",
                "minkeiv",
                "minnagolf",
                "minyu",
                "miyako",
                "miyazaki",
                "mjikenbo",
                "mlb",
                "mliving",
                "mmagazine",
                "mmt",
                "moneyplus",
                "moneypost",
                "monomax",
                "motorfan",
                "mrov",
                "mrt",
                "msportcom",
                "mssnw",
                "mthree",
                "musicv",
                "mvwalk",
                "mynavin",
                "naganonp",
                "nagasaki",
                "nakamaaru",
                "nallabout",
                "nankainn",
                "naranp",
                "nataliec",
                "nataliee",
                "natalien",
                "natalieo",
                "natalies",
                "nbcv",
                "nbn",
                "nbpvbball",
                "nbstv",
                "ncctv",
                "ncwani",
                "nekomag",
                "netdenjd",
                "netkeizai",
                "netshop",
                "netvivi",
                "neweco",
                "newskss",
                "newstkb",
                "newswbs",
                "newsweek",
                "newswitch",
                "nfjournal",
                "nfljapan",
                "nib",
                "nihonkai",
                "niigatan",
                "niigatatvv",
                "nikkeisty",
                "nikkey",
                "nipponcom",
                "nishinp",
                "nishispo",
                "nissyoku",
                "nkbizgate",
                "nkctrend",
                "nkgendai",
                "nknatiogeo",
                "nkogyo",
                "nksports",
                "nkt",
                "nmit",
                "nonno",
                "norimono",
                "nosweb",
                "nrakuten",
                "nrin",
                "nshaberu",
                "nsttv",
                "ntgjigen",
                "number",
                "numero",
                "oabv",
                "obsnews",
                "oceans",
                "octane",
                "ohbsn",
                "ohk",
                "okinawat",
                "ongakuto",
                "oric",
                "osknichi",
                "otakulab",
                "otocoto",
                "otokomae",
                "otonalife",
                "otonans",
                "otonas",
                "otv",
                "ourage",
                "ovo",
                "oxv",
                "parkblog",
                "penonline",
                "phileweb",
                "php_r",
                "php_s",
                "php_t",
                "phpfamily",
                "pia",
                "piaeigat",
                "pinzuba",
                "playboyz",
                "popeye",
                "president",
                "proresut",
                "pseven",
                "qab",
                "qjweb",
                "rab",
                "raditopi",
                "rallysv",
                "rbc",
                "rccv",
                "rcg",
                "realsound",
                "realspo",
                "redchair",
                "rekishin",
                "relifenet",
                "rescuenow",
                "resemom",
                "rkbv",
                "rkckochi",
                "rkk",
                "rnb",
                "rnishispo",
                "rolling",
                "ronspo",
                "rps",
                "rsk",
                "rtn",
                "rugbyrp",
                "runnetjp",
                "ryokoyom",
                "safariweb",
                "saga",
                "sagatv",
                "saitama",
                "sakae",
                "sakuranbo",
                "san",
                "sangyo",
                "saninchuo",
                "sanspo",
                "sanyo",
                "sasahi",
                "satvv",
                "sbc",
                "sbsv",
                "scafe",
                "scan",
                "sdigestw",
                "sdt",
                "seijiyama",
                "senkyocom",
                "seraijp",
                "shikihoz",
                "shimint",
                "shincho",
                "shinmai",
                "shoginss",
                "shokuhin",
                "shueisha",
                "shumien",
                "sippo",
                "sjournal",
                "slownews",
                "smamobijp",
                "soccerh",
                "soccerk",
                "soccerm",
                "soccermzw",
                "socialinv",
                "soon",
                "sorae_jp",
                "sotolover",
                "souzoku",
                "spaia",
                "sph",
                "spnannex",
                "spnaviv",
                "sportal",
                "sporting",
                "sportiva",
                "spotvnews",
                "spport",
                "spur",
                "srnijugo",
                "sshunan",
                "ssnp",
                "sspa",
                "stv",
                "suntvv",
                "sut",
                "suumoj",
                "syokuraku",
                "tabelog",
                "tamahiyo",
                "tanba",
                "tartbeat",
                "tarzanweb",
                "tbcv",
                "technoed",
                "teikokudb",
                "tekkou",
                "teletama",
                "telling",
                "tenki",
                "tennisc",
                "tennismagv",
                "tennisnet",
                "teny",
                "tetsucom",
                "the_tv",
                "theadline",
                "theanswer",
                "thedigest",
                "theworldw",
                "thrjapan",
                "tjapan",
                "tjmd",
                "tku",
                "tkwalk",
                "tkybgmnv",
                "tncv",
                "tochitele",
                "tokai",
                "tokushimav",
                "tokyofm",
                "tokyomxv",
                "tomamin",
                "tos",
                "tospoweb",
                "toushin",
                "toyo",
                "toyoedu",
                "tptj",
                "travelv",
                "tsb",
                "tsc",
                "tsk",
                "tspkeiba",
                "tssv",
                "tsugino",
                "tsukuru",
                "tsuriplus",
                "tsuyamanp",
                "tuf",
                "tuliptv",
                "tuy",
                "tvaichi",
                "tvfan",
                "tvguidew",
                "tvh",
                "tvi",
                "tvkv",
                "tvlife",
                "tvn",
                "tvosaka",
                "tvq",
                "tvtnews",
                "tvtokyos",
                "tvtplus",
                "tysv",
                "ubenippo",
                "uchubiz",
                "ufu",
                "umakeiba",
                "umatokuh",
                "umk",
                "usoccer",
                "utyv",
                "vague",
                "vbm",
                "victory",
                "videonewsv",
                "vingtcinq",
                "vingtcinqw",
                "vitup",
                "voce",
                "vogue",
                "voice",
                "wakayamav",
                "watchlife",
                "watchnavi",
                "wbikeplus",
                "wcartop",
                "weather",
                "webcg",
                "webhon",
                "webtan",
                "webtoo",
                "webuomo",
                "webym",
                "wedge",
                "wired",
                "withnews",
                "withonline",
                "wjsm",
                "wmap",
                "woman",
                "womensh",
                "wordleaf",
                "worldtt",
                "wwdjapan",
                "yabv",
                "yaeyamanp",
                "yamagatan",
                "yamakei",
                "ybc",
                "ybs",
                "ycreatp",
                "yjsdgs",
                "ymgcnw",
                "yogajol",
                "yoi",
                "yomotto",
                "yonh",
                "yonnana",
                "yts",
                "ytv",
                "zdn_ait",
                "zdn_ep",
                "zdn_m",
                "zdn_mkt",
                "zdn_n",
                "zdn_pc",
                "zdn_tt",
                "zdnet",
                "zeiricom",
            ]
            .iter()
            .map(|p| p.to_string())
            .collect(),
            interval,
        }
    }

    async fn fetch_provider(self: Arc<Self>, provider: &str) -> Result<Vec<FetchNewsArticle>> {
        let mut articles = vec![];
        let url = format!("https://news.yahoo.co.jp/rss/media/{}/all.xml", provider);
        let response_text = Client::new().get(url).send().await?.text().await?;
        let response: NewsResponse = serde_xml_rs::from_str(&response_text)?;
        // Links follow the format: `https://news.yahoo.co.jp/articles/${ID}?source=rss`
        // or `https://news.yahoo.co.jp/articles/${ID}/images/${IMAGE_INDEX}?source=rss`
        let link_regex = Regex::new(r"https://news.yahoo.co.jp/articles/(?<id>[^/?]+)")?;
        let content_selector = Selector::parse("article#uamods .article_body").unwrap();
        let now = Local::now();
        for item in response.channel.items.into_iter() {
            let published_time = match item.pub_date {
                Some(pub_date) => match DateTime::parse_from_rfc2822(&pub_date) {
                    Ok(published_time) => {
                        let published_time: DateTime<Local> = published_time.into();
                        if (now - published_time).num_hours() >= self.interval {
                            continue;
                        }
                        Some(published_time)
                    }
                    Err(_) => None,
                },
                None => None,
            };
            let (id, content, link) = match item.link {
                Some(link) => match link_regex.captures(&link) {
                    Some(captures) => (
                        Some(captures["id"].to_string()),
                        Self::extract_content(&content_selector, &link).await.ok(),
                        Some(link),
                    ),
                    None => (None, None, None),
                },
                None => (None, None, None),
            };
            articles.push(FetchNewsArticle {
                source_name: "Yahoo".to_string(),
                id,
                link,
                title: item.title,
                short_text: item.description,
                long_text: content,
                image_url: item.image.filter(|u| !u.contains("default.jpg")),
                published_time,
            });
        }
        Ok(articles)
    }

    async fn extract_content(content_selector: &Selector, link: &str) -> Result<String> {
        let document_html = Html::parse_document(&Client::new().get(link).send().await?.text().await?);
        let Some(content_element) = document_html.select(content_selector).next() else {
            bail!("No content found at {}.", link);
        };
        let content_html = content_element.html();
        let content = html2text::from_read_with_decorator(content_html.as_bytes(), MAX, RichDecorator::new())?;
        // TODO: Extract all content if there are multiple pages
        Ok(content)
    }
}

#[async_trait]
impl NewsFetcher for YahooClient {
    async fn fetch_news(self: Arc<Self>, handler: FetchNewsHandler) -> Vec<FetchNewsOutput> {
        const CHANNEL_CAPACITY: usize = 100;
        let (sender, mut receiver) = mpsc::channel(CHANNEL_CAPACITY);
        let receiver_handle = tokio::spawn(async move {
            let mut outputs = vec![];
            while let Some(handle) = receiver.recv().await {
                outputs.push(handle);
            }
            outputs
        });
        const PROVIDER_PERMITS_NUM: usize = 20;
        let semaphore = Arc::new(Semaphore::new(PROVIDER_PERMITS_NUM));
        for provider in &self.providers {
            let provider = provider.to_string();
            let self = Arc::clone(&self);
            let sender = sender.clone();
            let semaphore = Arc::clone(&semaphore);
            let handler = Arc::clone(&handler);
            // Use `spawn_local` to preserve the LocalSet, which is later used by the handler
            // Ref: `execution::cases::collect_news::CollectNewsCase`
            tokio::task::spawn_local(async move {
                let _permit = semaphore.acquire().await?;
                match self.fetch_provider(&provider).await {
                    Ok(articles) => {
                        info!("provider={}, articles.len={}", provider, articles.len());
                        for article in articles {
                            sender.send(handler(article)).await?;
                        }
                    }
                    Err(error) => error!("provider={}, error={}", provider, error),
                }
                Ok::<(), Error>(())
            });
        }
        drop(sender); // Drop early (before awaiting the receiver) to prevent the sender from blocking the channel from closing
        let outputs = receiver_handle.await.unwrap_or(vec![]);
        outputs
    }
}
